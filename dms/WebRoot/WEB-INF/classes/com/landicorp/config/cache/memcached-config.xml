<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- cache -->
	<!-- xmemcached 配置 -->
	<bean id="memcachedClientBuilder" class="com.landicorp.core.cache.CustomXMemcachedClientBuilder"
		p:connectionPoolSize="${memcached.connectionPoolSize}" p:failureMode="${memcached.failureMode}">
		<!-- XMemcachedClientBuilder have two arguments.First is server list,and 
			second is weights array. -->
		<constructor-arg value="${memcached.server.url}">
		</constructor-arg>
		<property name="commandFactory">
			<bean class="net.rubyeye.xmemcached.command.TextCommandFactory" />
		</property>
		<property name="sessionLocator">
			<bean class="net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator" />
		</property>
		<property name="transcoder">
			<bean class="net.rubyeye.xmemcached.transcoders.SerializingTranscoder" />
		</property>
	</bean>
	<!-- Use factory bean to build memcached client -->
	<bean id="memcachedClient" factory-bean="memcachedClientBuilder"
		factory-method="build" destroy-method="shutdown" />

	<bean id="systemCache" class="com.landicorp.core.cache.MemClient"
		scope="singleton">
		<constructor-arg index="0" ref="memcachedClient"></constructor-arg>
		<!-- 最大值为24×3600×30，即30天，超过后则失效时间为马上 -->
		<property name="expireTime" value="86400" />
	</bean>

	<!-- cache -->

	<!-- mybatis cache -->
	<bean id="mybatisCache" class="com.landicorp.core.cache.MemClient"
		scope="singleton">
		<constructor-arg index="0" ref="memcachedClient"></constructor-arg>
		<!-- 最大值为24×3600×30，即30天，超过后则失效时间为马上 -->
		<property name="expireTime" value="86400" />
	</bean>

	<!-- mybatis cache -->

	<bean class="com.landicorp.core.cache.mybatis.CustomCache">
		<constructor-arg index="0" ref="mybatisCache"></constructor-arg>
	</bean>


</beans>
