<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
         http://www.springframework.org/schema/aop 
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    <!-- cache 选择-->
	<import resource="cache/ehcached-config.xml" />
	<!-- <import resource="cache/memcached-config.xml" /> -->
	
	<!--<context:annotation-conrfig /> -->
	<!--<context:component-scan base-package="com.landicorp.core.*" /> -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/com/landicorp/config/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${mybatis.connection.driver_class}" />
		<property name="jdbcUrl" value="${mybatis.connection.url}" />
		<property name="user" value="${mybatis.connection.username}" />
		<property name="password" value="${mybatis.connection.password}" />

		<property name="minPoolSize" value="${mybatis.c3p0.minPoolSize}" />
		<property name="maxPoolSize" value="${mybatis.c3p0.maxPoolSize}" />
		<property name="maxIdleTime" value="${mybatis.c3p0.maxIdleTime}" />
		<property name="acquireIncrement" value="${mybatis.c3p0.acquireIncrement}" />
		<property name="maxStatements" value="${mybatis.c3p0.maxStatements}" />
		<property name="initialPoolSize" value="${mybatis.c3p0.initialPoolSize}" />
		<property name="idleConnectionTestPeriod" value="${mybatis.c3p0.idleConnectionTestPeriod}" />
		<property name="acquireRetryAttempts" value="${mybatis.c3p0.acquireRetryAttempts}" />
		<property name="breakAfterAcquireFailure" value="${mybatis.c3p0.breakAfterAcquireFailure}" />
		<property name="testConnectionOnCheckout" value="${mybatis.c3p0.testConnectionOnCheckout}" />
	</bean>
	
	<!-- 配置mybitas SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="configLocation">
			<value>classpath:/com/landicorp/config/mybatis.xml</value>
		</property>
	</bean>
	<!-- 配置SqlSessionTemplate -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg>
			<ref local="sqlSessionFactory" />
		</constructor-arg>
	</bean>
	<!-- ScanMapperFiles -->
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> <property 
		name="basePackage" value="com.landicorp.core.entities" /> </bean> -->
	<!-- ================================事务相关控制================================================= -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*Transaction" propagation="REQUIRED"
				read-only="false"
				rollback-for="java.lang.RuntimeException,com.landicorp.core.exception.TransactionException" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="coreTransactionPointcut"
			expression="execution(public * com.landicorp.core.service.*.*(..))" /> <!--把事务控制在Service层 -->
		<aop:advisor pointcut-ref="coreTransactionPointcut"
			advice-ref="transactionAdvice" />
	</aop:config>
	
	<bean id="systemInitTaskBean" class="com.landicorp.core.helper.sysinit.SystemInitTaskBean">
		<property name="taskList">
			<list>
				<!-- Core初始化任务 -->
				<ref bean="coreValueInitTask" />
				<ref bean="optionInitTask" />
				<!-- core Webservice初始化 -->
				<ref bean="coreWebserviceInitTask"/>
				<!-- Dms初始化任务 -->
				<ref bean="dmsOptionInitTask"/>
			</list>
		</property>
	</bean>
</beans>
