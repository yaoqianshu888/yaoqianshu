package com.landicorp.dms.service.impl;

import java.util.Date;
import java.util.List;
import java.util.Map;

import com.landicorp.core.dao.base.IMyBatisDao;
import com.landicorp.core.service.base.AbstractBaseServiceImpl;
import com.landicorp.core.web.pager.Pager;
import com.landicorp.dms.dao.IFunctionDao;
import com.landicorp.dms.entities.Function;
import com.landicorp.dms.service.IFunctionService;

public class FunctionServiceImpl extends AbstractBaseServiceImpl<Function, Integer>
		implements IFunctionService {

	private IFunctionDao functionDao;
	
	
	public IFunctionDao getFunctionDao() {
		return functionDao;
	}

	public void setFunctionDao(IFunctionDao functionDao) {
		this.functionDao = functionDao;
	}

	@Override
	public int add(Function arg0) {
		return functionDao.save(arg0);
	}


	@Override
	public Function getById(Integer arg0) {
		return functionDao.getById(arg0);
	}

	

	@Override
	public int update(Function arg0) {
		return functionDao.update(arg0);
	}

	@Override
	public List<Function> getAllFunction(Pager pager, Integer moduleId) {
		if(pager!=null){
			pager.setTotalCount(functionDao.getAllFunctionCount(moduleId));
		}
		return functionDao.getAllFunction(pager, moduleId);
	}

	@Override
	public IMyBatisDao<Function, Integer> getMyBatisDao() {
		return functionDao;
	}

	@Override
	public List<Function> getAllFunctionByModuleId(Integer moduleId) {
		return functionDao.getAllFunctionByModuleId(moduleId);
	}

	@Override
	public Integer getMaxId() {
		if(functionDao.getMaxId()==null){
			return 0;
		}
		return functionDao.getMaxId();
	}

	@Override
	public Integer getMaxNo() {
		if(functionDao.getMaxNo()==null){
			return 1;
		}
		return functionDao.getMaxNo();
	}

	@Override
	public List<Function> getFunctionListByFunction(Pager pager,
			Function function) {
		if(pager!=null){
			pager.setTotalCount(functionDao.getFunctionCountByFunction(function));
		}
		return functionDao.getFunctionListByFunction(pager, function);
	}

	@Override
	public List<Function> getAllFunctionPage(Pager pager, Function function) {
		if(pager!=null){
			pager.setTotalCount(functionDao.getAllFunctionPageCount(function));
		}
		return functionDao.getAllFunctionPage(pager, function);
	}

	@Override
	public List<Function> getAllFunctionExamimePage(Pager pager) {
		if(pager!=null){
			pager.setTotalCount(functionDao.getAllFunctionExamimePageCount());
		}
		return functionDao.getAllFunctionExamimePage(pager);
	}

	@Override
	public List<Function> getAllFunctionExamimePageByInfo(Pager pager,
			Function function, Date startCreateTime, Date endCreateTime) {
		if(pager!=null){
			pager.setTotalCount(functionDao.getAllFunctionExamimePageByInfoCount(function, startCreateTime, endCreateTime));
		}
		return functionDao.getAllFunctionExamimePageByInfo(pager, function, startCreateTime, endCreateTime);
	}

	@Override
	public Integer getAllFunctionPageCount(Function function) {
		return functionDao.getAllFunctionPageCount(function);
	}

	@Override
	public List<Function> getNowVerByNo(Function function) {
		return functionDao.getNowVerByNo(function);
	}

	@Override
	public void setFunctionByNo(Function function) {
		functionDao.setFunctionByNo(function);
	}

	@Override
	public void setFunctionById(Function function) {
		functionDao.setFunctionById(function);
	}

}
