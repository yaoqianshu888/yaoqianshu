package com.landicorp.dms.action.document;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URLEncoder;
import java.util.Calendar;
import java.util.Date;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FileUtils;
import org.apache.struts2.ServletActionContext;

import com.landicorp.core.action.BaseActionSupport;
import com.landicorp.dms.entities.Document;
import com.landicorp.dms.service.IDocumentService;
import com.landicorp.dms.util.DocConverter;
import com.landicorp.dms.web.option.Dms;

public class DocumentUploadAction extends BaseActionSupport {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Document document;
	private IDocumentService documentService;
	private File uploadFile;
	private String uploadFileFileName;
	private String uploadFileContentType;
	private String swfpath;  //文档预览路径

	

	public String getSwfpath() {
		return swfpath;
	}

	public void setSwfpath(String swfpath) {
		this.swfpath = swfpath;
	}

	public String getUploadFileContentType() {
		return uploadFileContentType;
	}

	public void setUploadFileContentType(String uploadFileContentType) {
		this.uploadFileContentType = uploadFileContentType;
	}

	

	public String getUploadFileFileName() {
		return uploadFileFileName;
	}

	public void setUploadFileFileName(String uploadFileFileName) {
		this.uploadFileFileName = uploadFileFileName;
	}

	public File getUploadFile() {
		return uploadFile;
	}

	public void setUploadFile(File uploadFile) {
		this.uploadFile = uploadFile;
	}

	public IDocumentService getDocumentService() {
		return documentService;
	}

	public void setDocumentService(IDocumentService documentService) {
		this.documentService = documentService;
	}

	public String prepare() {
		//生成编号
		Calendar calendar = Calendar.getInstance();
		int seconds = calendar.get(Calendar.SECOND);
		int max=documentService.getMaxId();
		document=new Document();
		document.setNo(max+""+seconds);
		return INPUT;
	}
	
	//新增在线上传文档
	public String insertModel() throws Exception{
		String realPath=ServletActionContext.getServletContext().getRealPath(Dms.DOCUMENT_PATH);
		File file=new File(realPath);
		if(!file.exists()){
			file.mkdirs();
		}
		uploadFileFileName=UUID.randomUUID().toString()+"_"+uploadFileFileName;
		FileUtils.copyFile(uploadFile, new File(file,uploadFileFileName));
		
		document.setCreateTime(new Date());
		document.setCreator(getSessionUser());
		document.setLastModifier(getSessionUser());
		document.setLastModifyTime(new Date());
		document.setVersionId("1.00.00");
		document.setDocType(Dms.UPLOAD);
		document.setAvailable(1);
		document.setIsNowVer(Dms.IS_NOW_VER);
		document.setDocumentPath(Dms.DOCUMENT_PATH+uploadFileFileName);
		
		documentService.add(document);
		setWindowReturnValue("ok");
		return SUCCESS;
		
	}

	//下载文档
	public void downLoad() throws IOException{
		HttpServletResponse response = ServletActionContext.getResponse(); 
		response.setCharacterEncoding("UTF-8");
		HttpServletRequest request=ServletActionContext.getRequest();
		
		document=documentService.getById(document.getId());
		String filepath = request.getRealPath("\\")+document.getDocumentPath();
		
		File file = new File(filepath);
		InputStream inputStream = null;
		OutputStream outputStream = null;
		byte[] b= new byte[1024];
		int len = 0;
		try {
			inputStream = new FileInputStream(file);
			outputStream = response.getOutputStream();
			
			response.setContentType("application/force-download");
			String filename = file.getName();
			
			response.addHeader("Content-Disposition","attachment; filename=" + URLEncoder.encode(filename, "UTF-8"));
			response.setContentLength( (int) file.length( ) );
			
			while(true){
                if(inputStream.available()>0){
                    if((len =inputStream.read(b))>0){
                    	outputStream.write(b, 0, len);
                    } else{
                        break ;
                    }
                }else if(inputStream.available()==0){
                    System.out.println("与服务器的链接已中断") ;
                    break ;
                }
             }
			
		} catch (Exception e) {
			e.printStackTrace();
		}finally{
			if(inputStream != null){
				try {
					inputStream.close();
					inputStream = null;
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			if(outputStream != null){
				try {
					outputStream.close();
					outputStream = null;
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
	}
	public Document getDocument() {
		return document;
	}

	public void setDocument(Document document) {
		this.document = document;
	}

	//预览上传的文件
	public String preview(){
		HttpServletRequest request=ServletActionContext.getRequest();
		HttpSession session=request.getSession();
		document=documentService.getById(document.getId());
		String converfilename = request.getRealPath("\\")+document.getDocumentPath();
		DocConverter d = new DocConverter(converfilename);
		//调用conver方法开始转换，先执行doc2pdf()将office文件转换为pdf;再执行pdf2swf()将pdf转换为swf;  
		d.conver();
		//调用getswfPath()方法，打印转换后的swf文件路径
		System.out.println(d.getswfPath());
		//生成swf相对路径，以便传递给flexpaper播放器
		swfpath = "upload/document"+d.getswfPath().substring(d.getswfPath().lastIndexOf("\\"));
		session.setAttribute("swfpath", swfpath);
		System.out.println(swfpath);
		
		return "preview";
	}

}