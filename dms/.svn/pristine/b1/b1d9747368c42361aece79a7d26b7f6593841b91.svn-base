package com.landicorp.dms.dao;

import java.util.Date;
import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.landicorp.core.dao.base.IMyBatisDao;
import com.landicorp.core.web.pager.Pager;
import com.landicorp.dms.entities.Document;

public interface IDocumentDao  extends IMyBatisDao<Document, Integer> {
	public List<Document> getAllDocumentAila(@Param("pager") Pager pager); //得到所有的有效的文档
	public Integer getAllDocumentCountAila();     //得到所有的有效文档数
	
	public List<Document> getDocumentListByDocument(     //按条件得到有效文档
			@Param("document") Document document,
			@Param("startCreateTime") Date startCreateTime,
			@Param("endCreateTime") Date endCreateTime,
			@Param("pager") Pager pager);
		
	public int getDocumentCountByDocument(@Param("document") Document document,  //按条件得到有效文档数
			@Param("startCreateTime") Date startCreateTime,
			@Param("endCreateTime") Date endCreateTime);
	
	public List<Document> getAllDocument(@Param("pager") Pager pager); //得到所有的文档
	public Integer getAllDocumentCount();     //得到所有的文档数
	
	public List<Document> getDocumentListByDocumentAll(     //按条件得到文档
			@Param("document") Document document,
			@Param("startCreateTime") Date startCreateTime,
			@Param("endCreateTime") Date endCreateTime,
			@Param("pager") Pager pager);
		
	public int getDocumentCountByDocumentAll(@Param("document") Document document,
			@Param("startCreateTime") Date startCreateTime,
			@Param("endCreateTime") Date endCreateTime);  //按条件得到文档数
	public Integer getMaxId();  //得到最大的文档id
	public void saveEdit(Document document);//新增文档（包含id）
	
	public List<Document> getAllDocumentByNo(@Param("pager") Pager pager,@Param("no") String no); //通过文档编号得到文档
	public Integer getAllDocumentCountByNo(String no);
	
	public List<Document> getAllDocumentByNoAndVerId(@Param("pager") Pager pager,@Param("document") Document document); //通过文档编号和版本号得到文档
	public Integer getAllDocumentCountByNoAndVerId(Document document);
	public void setDocumentByNo(Document document);  // 根据文档编号设置不是当前版本
	public void setDocumentById(Document document);  //根据文档id设置为当前版本 
	public List<Document> getByProjectId(Integer id);  //根据项目id得到所有的文档
	public List<Document> getNowVerByNo(Document document);  //通过文档编号no得到当前版本
	public String getMaxVersionIdById(Document document);//通过文档编号得到当前最大版本号
}
