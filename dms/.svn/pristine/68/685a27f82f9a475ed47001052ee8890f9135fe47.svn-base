<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 命名空间 -->
<mapper namespace="com.landicorp.dms.dao.IBasicNodeContDao">
	<resultMap type="basicNodeCont" id="basicNodeCont">
		<result property="id" column="ID"/>
		<result property="node.id" column="NODE_ID" />
		<result property="function.id" column="FUNCTION_ID" />
		<result property="document.id" column="DOCUMENT_ID" />
		<result property="module.id" column="MODULE_ID" />
		<result property="content" column="CONTENT" />
		<association property="node" column="NODE_ID"
			javaType="com.landicorp.dms.entities.Node" select="com.landicorp.dms.dao.INodeDao.getById" />
	</resultMap>

	<sql id="keyColumns">NODE_ID,FUNCTION_ID,DOCUMENT_ID,CONTENT,MODULE_ID
	</sql>
	<sql id="valueColumns">
		#{node.id,jdbcType=NUMERIC},
		#{function.id,jdbcType=NUMERIC},
		#{document.id,jdbcType=NUMERIC},
		#{content,jdbcType=LONGVARCHAR},
		#{module.id,jdbcType=NUMERIC}
	</sql>
	
	<insert id="save" parameterType="basicNodeCont">

		insert into t_dms_basic_node_cont(
		<include refid="keyColumns" />
		) values(
		<include refid="valueColumns" />
		)
		<selectKey resultType="int" keyProperty="id">
			select
			LAST_INSERT_ID() as value  
	    </selectKey>

	</insert>
	<update id="update" parameterType="basicNodeCont">
		update t_dms_basic_node_cont
		<set>
			<if test="node!=null and node.id!=null">NODE_ID=#{node.id},</if>
			<if test="function!=null and function.id!=null">FUNCTION_ID=#{function.id},</if>
			<if test="document!=null and document.id!=null">DOCUMENT_ID=#{document.id},</if>
			<if test="content!=null">CONTENT=#{content},</if>
			<if test="module!=null and module.id!=null">MODULE_ID=#{module.id}</if>
		</set>
		where id=#{id}
	</update>
	<update id="updateContent" parameterType="basicNodeCont">
		update t_dms_basic_node_cont
		<set>
			<if test="content!=null">CONTENT=#{content}</if>
		</set>
		where NODE_ID=#{node.id} and DOCUMENT_ID=#{document.id} and FUNCTION_ID is null
	</update>
	
	<!-- 更新功能节点内容 -->
	<update id="updateContentFunction" parameterType="basicNodeCont">
		update t_dms_basic_node_cont
		<set>
			<if test="content!=null">CONTENT=#{content}</if>
		</set>
		where NODE_ID=#{node.id} and DOCUMENT_ID=#{document.id} and FUNCTION_ID =#{function.id}
	</update>
	
	
	<select id="getById" parameterType="int" resultMap="basicNodeCont">
		select *
		from
		t_dms_basic_node_cont
		where id=#{id}
	</select>
	<delete id="delete" parameterType="int">
		delete from t_dms_basic_node_cont where
		id in
		<foreach collection="array" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!-- 通过文档id得到内容 -->
	<select id="getByDocumentId" parameterType="int" resultMap="basicNodeCont">
		select *
		from
		t_dms_basic_node_cont
		where DOCUMENT_ID=#{id} and FUNCTION_ID is null
	</select>
	
	<!-- 通过文档id和功能点id得到内容 -->
	<select id="getByDocumentIdAndFunctionId" parameterType="map" resultMap="basicNodeCont">
		select *
		from
		t_dms_basic_node_cont
		where DOCUMENT_ID=#{DocumentId} and FUNCTION_ID=#{FunctionId}
	</select>
	
	<!-- 通过功能点id和节点id得到内容 -->
	<select id="getByNodeIdAndFunctionId" parameterType="map" resultMap="basicNodeCont">
		select *
		from
		t_dms_basic_node_cont
		where NODE_ID=#{NodeId} and FUNCTION_ID=#{FunctionId}
	</select>
</mapper>